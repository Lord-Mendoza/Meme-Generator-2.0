{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\zenik\\\\OneDrive\\\\School\\\\GMU\\\\Super Senior\\\\SWE 432\\\\Homeworks\\\\HW4\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zenik\\\\OneDrive\\\\School\\\\GMU\\\\Super Senior\\\\SWE 432\\\\Homeworks\\\\HW4\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\zenik\\\\OneDrive\\\\School\\\\GMU\\\\Super Senior\\\\SWE 432\\\\Homeworks\\\\HW4\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zenik\\\\OneDrive\\\\School\\\\GMU\\\\Super Senior\\\\SWE 432\\\\Homeworks\\\\HW4\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar rp = require(\"request-promise\");\n\nvar MemeClient =\n/*#__PURE__*/\nfunction () {\n  function MemeClient() {\n    _classCallCheck(this, MemeClient);\n\n    this.endpoint = \"http://central.thememebase.com:8080/\";\n    this.cache = {};\n  }\n\n  _createClass(MemeClient, [{\n    key: \"getTemplate\",\n    value: function () {\n      var _getTemplate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", rp.get({\n                  uri: this.endpoint + \"templates\",\n                  json: true\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getTemplate() {\n        return _getTemplate.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"generateMeme\",\n    value: function () {\n      var _generateMeme = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(templateName, textBlock) {\n        var req, idx, _this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                req = {\n                  memeTemplate: templateName,\n                  text: textBlock\n                };\n                idx = JSON.stringify(req);\n                _this = this;\n\n                if (!this.cache[idx]) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", Promise.resolve(this.cache[idx]));\n\n              case 5:\n                return _context2.abrupt(\"return\", rp.post({\n                  url: this.endpoint + \"memes\",\n                  encoding: null,\n                  //NOTE - this is necessary to ensure that the image doesnt become corrupt in translation\n                  json: req\n                }).then(function (val) {\n                  var ret = new Blob([val]);\n                  _this.cache[idx] = ret;\n                  return Promise.resolve(ret);\n                }));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function generateMeme(_x, _x2) {\n        return _generateMeme.apply(this, arguments);\n      };\n    }()\n  }]);\n\n  return MemeClient;\n}();\n\nexport { MemeClient as default };","map":{"version":3,"sources":["C:\\Users\\zenik\\OneDrive\\School\\GMU\\Super Senior\\SWE 432\\Homeworks\\HW4\\src\\MemeClient.js"],"names":["rp","require","MemeClient","endpoint","cache","get","uri","json","templateName","textBlock","req","memeTemplate","text","idx","JSON","stringify","_this","Promise","resolve","post","url","encoding","then","val","ret","Blob"],"mappings":";;;;;AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,iBAAD,CAAhB;;IAEqBC,U;;;AAEjB,wBAAc;AAAA;;AACV,SAAKC,QAAL,GAAgB,sCAAhB;AACA,SAAKC,KAAL,GAAW,EAAX;AACH;;;;;;;;;;;;iDAGUJ,EAAE,CAACK,GAAH,CAAO;AAACC,kBAAAA,GAAG,EAAE,KAAKH,QAAL,GAAgB,WAAtB;AAAmCI,kBAAAA,IAAI,EAAE;AAAzC,iBAAP,C;;;;;;;;;;;;;;;;;;;iDAGQC,Y,EAAcC,S;;;;;;;AAEzBC,gBAAAA,G,GAAM;AACNC,kBAAAA,YAAY,EAAEH,YADR;AAENI,kBAAAA,IAAI,EAAEH;AAFA,iB;AAINI,gBAAAA,G,GAAMC,IAAI,CAACC,SAAL,CAAeL,GAAf,C;AACNM,gBAAAA,K,GAAM,I;;qBACP,KAAKZ,KAAL,CAAWS,GAAX,C;;;;;kDACQI,OAAO,CAACC,OAAR,CAAgB,KAAKd,KAAL,CAAWS,GAAX,CAAhB,C;;;kDACJb,EAAE,CAACmB,IAAH,CAAQ;AACXC,kBAAAA,GAAG,EAAE,KAAKjB,QAAL,GAAgB,OADV;AAEXkB,kBAAAA,QAAQ,EAAE,IAFC;AAEK;AAChBd,kBAAAA,IAAI,EAAEG;AAHK,iBAAR,EAIJY,IAJI,CAIC,UAAAC,GAAG,EAAI;AACX,sBAAIC,GAAG,GAAG,IAAIC,IAAJ,CAAS,CAACF,GAAD,CAAT,CAAV;AAEAP,kBAAAA,KAAK,CAACZ,KAAN,CAAYS,GAAZ,IAAmBW,GAAnB;AAEA,yBAAOP,OAAO,CAACC,OAAR,CAAgBM,GAAhB,CAAP;AACH,iBAVM,C;;;;;;;;;;;;;;;;;;;SArBMtB,U","sourcesContent":["var rp = require(\"request-promise\");\n\nexport default class MemeClient {\n\n    constructor() {\n        this.endpoint = \"http://central.thememebase.com:8080/\";\n        this.cache={};\n    }\n\n    async getTemplate() {\n        return rp.get({uri: this.endpoint + \"templates\", json: true});\n    }\n\n    async generateMeme(templateName, textBlock) {\n\n        let req = {\n            memeTemplate: templateName,\n            text: textBlock\n        };\n        let idx = JSON.stringify(req);\n        let _this=this;\n        if(this.cache[idx])\n            return Promise.resolve(this.cache[idx]);\n        return rp.post({\n            url: this.endpoint + \"memes\",\n            encoding: null, //NOTE - this is necessary to ensure that the image doesnt become corrupt in translation\n            json: req\n        }).then(val => {\n            let ret = new Blob([val]);\n\n            _this.cache[idx] = ret;\n\n            return Promise.resolve(ret);\n        });\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}