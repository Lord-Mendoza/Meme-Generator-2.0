{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zenik\\\\OneDrive\\\\School\\\\GMU\\\\Super Senior\\\\SWE 432\\\\Homeworks\\\\HW4\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zenik\\\\OneDrive\\\\School\\\\GMU\\\\Super Senior\\\\SWE 432\\\\Homeworks\\\\HW4\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\zenik\\\\OneDrive\\\\School\\\\GMU\\\\Super Senior\\\\SWE 432\\\\Homeworks\\\\HW4\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\zenik\\\\OneDrive\\\\School\\\\GMU\\\\Super Senior\\\\SWE 432\\\\Homeworks\\\\HW4\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\zenik\\\\OneDrive\\\\School\\\\GMU\\\\Super Senior\\\\SWE 432\\\\Homeworks\\\\HW4\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zenik\\\\OneDrive\\\\School\\\\GMU\\\\Super Senior\\\\SWE 432\\\\Homeworks\\\\HW4\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\zenik\\\\OneDrive\\\\School\\\\GMU\\\\Super Senior\\\\SWE 432\\\\Homeworks\\\\HW4\\\\src\\\\Login.js\";\n\n/*\nLord Mendoza\nSWE 432 - HW4\n\nThe following is in charge of handling the \"login/register\" tab of the MemeBase\n */\nimport React, { Component } from \"react\";\nimport { Alert, Button, ControlLabel, FormControl } from \"react-bootstrap\";\nimport firebase from \"./firebase\";\nimport { Redirect } from \"react-router-dom\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      disableComponent: false,\n      errorMessage: \"\",\n      redirectUser: false\n    };\n    _this.handleInputEmail = _this.handleInputEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputPassword = _this.handleInputPassword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitInfo = _this.submitInfo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /*\n  Changes the email state\n   */\n\n\n  _createClass(Login, [{\n    key: \"handleInputEmail\",\n    value: function handleInputEmail(e) {\n      this.setState({\n        email: e.target.value\n      });\n    }\n    /*\n    Changes the password state\n     */\n\n  }, {\n    key: \"handleInputPassword\",\n    value: function handleInputPassword(e) {\n      this.setState({\n        password: e.target.value\n      });\n    }\n    /*\n    Analyzes the user input for email and password, and tries to sign in the user. If it fails because the\n    account does not exist, an account is automatically created on their behalf. Any other sign-in/account creation\n    errors are accounted for.\n     */\n\n  }, {\n    key: \"submitInfo\",\n    value: function submitInfo(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      firebase.auth.signInWithEmailAndPassword(this.state.email, this.state.password).then(function (temp) {\n        //When successful, don't show the alert component\n        _this2.setState({\n          disableComponent: false,\n          redirectUser: true\n        });\n      }).catch(function (signInError) {\n        //Otherwise, store the sign in error code to this variable, which will be deciphered in a moment\n        var signInErrorCode = signInError.code; //If email is invalid, show the alert & pass the following message\n\n        if (signInErrorCode === 'auth/invalid-email') {\n          _this2.setState({\n            disableComponent: true,\n            errorMessage: \"Error: The email address is badly formatted.\"\n          });\n        } //Else if user is not found...\n        else if (signInErrorCode === 'auth/user-not-found') {\n            //...invoke a call to create the user automatically\n            firebase.auth.createUserWithEmailAndPassword(_this2.state.email, _this2.state.password).then(function (tempTwo) {\n              //If created successfully, redirect the user\n              _this2.setState({\n                disableComponent: false,\n                redirectUser: true\n              });\n            }) //Else catch the error when creating the account\n            .catch(function (createError) {\n              var createErrorCode = createError.code; //If call to create user returns weak password, instruct the user to try again\n\n              if (createErrorCode === 'auth/weak-password') _this2.setState({\n                disableComponent: true,\n                errorMessage: \"Error: Password should be at least 6 characters\"\n              });\n            });\n          } //Lastly, if the account exists and the password is simply wrong, prompt user to try again\n          else if (signInErrorCode === \"auth/wrong-password\") _this2.setState({\n              disableComponent: true,\n              errorMessage: \"Error: The password is invalid or the user does not have a password.\"\n            });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //If the component \"Alert\" is enabled, display this format (which shows the error message)\n      if (this.state.disableComponent) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.submitInfo.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(ControlLabel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \" \", React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \" Email address: \")), React.createElement(FormControl, {\n          type: \"email\",\n          value: this.state.email,\n          onChange: this.handleInputEmail.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(ControlLabel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \" \", React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \" Password: \")), React.createElement(FormControl, {\n          type: \"password\",\n          value: this.state.password,\n          onChange: this.handleInputPassword.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }), React.createElement(Alert, {\n          bsStyle: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \" \", this.state.errorMessage, \" \"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"Log in (or register)\"))));\n      } //Else if the component is disabled, but redirecting the user isn't toggled yet, show this normal version.\n      else if (!this.state.disableComponent && !this.state.redirectUser) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, React.createElement(\"form\", {\n            onSubmit: this.submitInfo.bind(this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, React.createElement(ControlLabel, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, \" \", React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, \" Email address: \")), React.createElement(FormControl, {\n            type: \"email\",\n            value: this.state.email,\n            onChange: this.handleInputEmail.bind(this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }), React.createElement(ControlLabel, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, \" \", React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, \" Password: \")), React.createElement(FormControl, {\n            type: \"password\",\n            value: this.state.password,\n            onChange: this.handleInputPassword.bind(this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, \"Log in (or register)\"))));\n        } //Otherwise, redirect the user.\n        else {\n            return React.createElement(Redirect, {\n              to: \"/\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145\n              },\n              __self: this\n            });\n          }\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["C:\\Users\\zenik\\OneDrive\\School\\GMU\\Super Senior\\SWE 432\\Homeworks\\HW4\\src\\Login.js"],"names":["React","Component","Alert","Button","ControlLabel","FormControl","firebase","Redirect","Login","props","state","email","password","disableComponent","errorMessage","redirectUser","handleInputEmail","bind","handleInputPassword","submitInfo","e","setState","target","value","preventDefault","auth","signInWithEmailAndPassword","then","temp","catch","signInError","signInErrorCode","code","createUserWithEmailAndPassword","tempTwo","createError","createErrorCode"],"mappings":"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","sourcesContent":["/*\nLord Mendoza\nSWE 432 - HW4\n\nThe following is in charge of handling the \"login/register\" tab of the MemeBase\n */\nimport React, {Component} from \"react\";\nimport {Alert, Button, ControlLabel, FormControl} from \"react-bootstrap\";\nimport firebase from \"./firebase\"\nimport {Redirect} from \"react-router-dom\";\n\nexport default class Login extends Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state = {email: \"\", password: \"\", disableComponent: false, errorMessage: \"\", redirectUser: false};\n        this.handleInputEmail = this.handleInputEmail.bind(this);\n        this.handleInputPassword = this.handleInputPassword.bind(this);\n        this.submitInfo = this.submitInfo.bind(this);\n    }\n\n    /*\n    Changes the email state\n     */\n    handleInputEmail(e)\n    {\n        this.setState({email: e.target.value});\n    }\n\n    /*\n    Changes the password state\n     */\n    handleInputPassword(e)\n    {\n        this.setState({password: e.target.value});\n    }\n\n    /*\n    Analyzes the user input for email and password, and tries to sign in the user. If it fails because the\n    account does not exist, an account is automatically created on their behalf. Any other sign-in/account creation\n    errors are accounted for.\n     */\n    submitInfo(e)\n    {\n        e.preventDefault();\n\n        firebase.auth.signInWithEmailAndPassword(this.state.email, this.state.password).then(temp =>{\n            //When successful, don't show the alert component\n            this.setState({disableComponent: false, redirectUser: true});\n        })\n        .catch(signInError => {\n            //Otherwise, store the sign in error code to this variable, which will be deciphered in a moment\n           let signInErrorCode = signInError.code;\n\n           //If email is invalid, show the alert & pass the following message\n           if (signInErrorCode === 'auth/invalid-email')\n           {\n               this.setState({disableComponent: true, errorMessage: \"Error: The email address is badly formatted.\"});\n           }\n           //Else if user is not found...\n           else if (signInErrorCode === 'auth/user-not-found')\n           {\n               //...invoke a call to create the user automatically\n                firebase.auth.createUserWithEmailAndPassword(this.state.email, this.state.password)\n                    .then(tempTwo => {\n                        //If created successfully, redirect the user\n                        this.setState({disableComponent: false, redirectUser: true});\n                    })\n                    //Else catch the error when creating the account\n                    .catch(createError => {\n                        let createErrorCode = createError.code;\n\n                        //If call to create user returns weak password, instruct the user to try again\n                        if (createErrorCode === 'auth/weak-password')\n                            this.setState({disableComponent: true, errorMessage: \"Error: Password should be at least 6 characters\"});\n                    });\n           }\n           //Lastly, if the account exists and the password is simply wrong, prompt user to try again\n           else if (signInErrorCode === \"auth/wrong-password\")\n               this.setState({disableComponent: true, errorMessage: \"Error: The password is invalid or the user does not have a password.\"});\n        });\n    }\n\n    render() {\n        //If the component \"Alert\" is enabled, display this format (which shows the error message)\n        if (this.state.disableComponent)\n        {\n            return (\n                <div>\n                    <form onSubmit={this.submitInfo.bind(this)}>\n                        <ControlLabel> <b> Email address: </b></ControlLabel>\n                        <FormControl type=\"email\"\n                                     value={this.state.email}\n                                     onChange={this.handleInputEmail.bind(this)}>\n                        </FormControl>\n\n                        <ControlLabel> <b> Password: </b></ControlLabel>\n                        <FormControl type=\"password\"\n                                     value={this.state.password}\n                                     onChange={this.handleInputPassword.bind(this)}>\n                        </FormControl>\n\n                        <Alert bsStyle=\"danger\"> {this.state.errorMessage} </Alert>\n\n                        <div>\n                            <Button type=\"submit\">\n                                Log in (or register)\n                            </Button>\n                        </div>\n                    </form>\n                </div>\n            )\n        }\n        //Else if the component is disabled, but redirecting the user isn't toggled yet, show this normal version.\n        else if (!this.state.disableComponent && !this.state.redirectUser)\n        {\n            return (\n                <div>\n                    <form onSubmit={this.submitInfo.bind(this)}>\n                        <ControlLabel> <b> Email address: </b></ControlLabel>\n                        <FormControl type=\"email\"\n                                     value={this.state.email}\n                                     onChange={this.handleInputEmail.bind(this)}>\n                        </FormControl>\n\n                        <ControlLabel> <b> Password: </b></ControlLabel>\n                        <FormControl type=\"password\"\n                                     value={this.state.password}\n                                     onChange={this.handleInputPassword.bind(this)}>\n                        </FormControl>\n\n                        <div>\n                            <Button type=\"submit\">\n                                Log in (or register)\n                            </Button>\n                        </div>\n                    </form>\n                </div>\n            )\n        }\n        //Otherwise, redirect the user.\n        else\n        {\n            return <Redirect to = {\"/\"}/>\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}